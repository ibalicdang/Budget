<?php

namespace AppBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * ExpenseRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ExpenseRepository extends EntityRepository
{
	public function totalSumOfExpense()
	{
		 $sumQuery = $this->_em->getRepository('AppBundle:Expense')
		->createQueryBuilder('t')
		->select('SUM(t.expenseValue) as totalSumOfExpense')
		->getQuery()
		->getSingleScalarResult();

		return $sumQuery;
	}

	public function totalSumOfExpenseToday(\Datetime $date)
	{	
		$from = new \DateTime($date->format("Y-m-d")." 00:00:00");
    	$to   = new \DateTime($date->format("Y-m-d")." 23:59:59");

		 $sumQuery = $this->_em->getRepository('AppBundle:Expense')
		->createQueryBuilder('t')
		->select('SUM(t.expenseValue) as totalSumOfExpense')
		->andWhere('t.dateManipulation BETWEEN :from AND :to')
		->setParameter('from', $from )
        ->setParameter('to', $to)
		->getQuery()
		->getSingleScalarResult();

		return $sumQuery;
	}

	public function findFromTo($dateFrom, $toDate)
	{	
		$addTime = "23:59:59";
		$toDate = $toDate. ' ' .$addTime;
  		$dateFromz  = new \DateTime($dateFrom);
  		$toDatez  = new \DateTime($toDate);

		 $searchQuery = $this->_em->getRepository('AppBundle:Expense')
		->createQueryBuilder('t')
		->andWhere('t.dateManipulation BETWEEN :from AND :to')
		->andWhere('t.deleteStatus = 0')
		->setParameter('from', $dateFromz)
        ->setParameter('to', $toDatez)
		->getQuery()
		->getResult();

		return $searchQuery;
	}

	public function findFromToScalar($dateFrom, $toDate)
	{	
		$addTime = "23:59:59";
		$toDate = $toDate. ' ' .$addTime;
  		$dateFromz  = new \DateTime($dateFrom);
  		$toDatez  = new \DateTime($toDate);

		 $searchQuery = $this->_em->getRepository('AppBundle:Expense')
		->createQueryBuilder('t')
		->andWhere('t.dateManipulation BETWEEN :from AND :to')
		->andWhere('t.deleteStatus = 0')
		->setParameter('from', $dateFromz)
        ->setParameter('to', $toDatez)
		->getQuery()
		->getScalarResult();

		return $searchQuery;
	}

	

}


